---
const { min, max } = Astro.props
---

<label>
	Page
	<input
		id="page-count-input"
		type="text"
		inputmode="numeric"
		pattern="[0-9]*"
		maxlength="2"
		size="3"
		placeholder="0"
		value="0"
		data-minimum={min}
		data-maximum={max}
	/>
</label>

<script>
	import { goToPage } from '../util/navigation'

	const isNumber = (value: string) => /^\d*\.?\d*$/.test(value)
	const input = document.getElementById('page-count-input') as HTMLInputElement
	const min = parseInt(input.dataset.minimum ?? '0')
	const max = parseInt(input.dataset.maximum ?? '25')

	let pageNumber = undefined as string | undefined
	
	['input', 'keydown', 'keyup', 'mousedown', 'mouseup', 'select', 'contextmenu', 'drop'].forEach((event) => {

		input.addEventListener(event, () => {

			if(isNumber(input.value)) {
				if(input.value.charAt(0) == '0' && input.value.length > 1) {
					input.value = input.value.slice(1)
				}

				pageNumber = input.value
			}
			else {
				input.value = pageNumber ?? '0'
			}
		})
	})

	input.addEventListener('keypress', (event) => {
		if (event.key === 'Enter') {
			goToPage(pageNumber, min, max)
		}
    })

	document.addEventListener('DOMContentLoaded', () => {
		const urlParams = new URLSearchParams(window.location.search)
		const pageNumber = urlParams.get('page') ?? '0'
		goToPage(pageNumber, min, max)
	})
</script>

<style>
	label
	{
		display: flex;
		flex-direction: row;
		align-items: center;
		justify-content: center;
		gap: 10px;

		margin-left: auto;
		text-transform: uppercase;
		user-select: none;
	}

	input
	{
		color: currentColor;
		background: transparent;
		border: 1.5px solid currentColor;
		border-radius: 8px;
		max-width: 50px;

		font-family: var(--font);
		font-size: 1.33rem;
		line-height: 1.5;
		text-align: center;

		transition: background-color 0.1s ease-out;
	}

	input:focus
	{
		outline: none;
		background: hsl(var(--ink-color) / 0.1);
	}

	@media (max-width: 600px)
	{
		label
		{
			flex-direction: column;
			gap: 5px;

			position: fixed;
			bottom: 80px;
			left: calc(50% - 30.5px); /* 50% of page, minus 50% of input's width = centered */

			z-index: 999;
			background-color: hsl(var(--paper-color) / 1);
			border-radius: 10px;
			padding: 6px 2px 2px;
		}
	}
</style>