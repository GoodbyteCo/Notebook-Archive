---
const { sortElementId } = Astro.props
---
<div class="button-container">
	<label class="sort-button">
		<input
			type="checkbox"
			onchange={`reverseSortOrder('${sortElementId}')`}
			checked
		>
		<span class="secondary" aria-label="Sort new to old">Sort</span>
		<span class="spinny-bit" role="presentation" aria-hidden="true">
			<span class="uppercase">new</span>
			<span class="secondary">to</span>
			<span class="uppercase">old</span>
		</span>
	</label>
</div>

<script is:inline>
	function reverseSortOrder(sortElementId) {
		const list = document.getElementById(sortElementId)
		list.reversed = !list.reversed
		list.append(...Array.from(list.childNodes).reverse())
	}
</script>

<style>
	div.button-container
	{
		grid-column: 1 / -1;
		display: flex;
		flex-direction: row-reverse;
	}

	.sort-button
	{
		color: currentColor;
		cursor: pointer;
		user-select: none;
		padding: 20px;
	}

	.sort-button input
	{
		opacity: 0;
		width: 0;
		margin: 0;
		padding: 0;
	}

	.sort-button:has(input:focus-visible)
	{
		outline: 1.5px solid hsl(var(--ink-color) / 1);
		border-radius: 8px;
	}

	.spinny-bit,
	.spinny-bit > span
	{
		display: inline-block;
		transition: transform 0.3s ease-out;
	}

	input:not(:checked) ~ .spinny-bit
	{
		transform: rotate(180deg);
	}

	input:not(:checked) ~ .spinny-bit > span
	{
		transform: rotate(-180deg);
	}

	.uppercase { text-transform: uppercase; }
	.secondary { opacity: 0.4; }
</style>